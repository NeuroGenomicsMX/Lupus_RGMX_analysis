"0","# Creating database to save re-sampling results"
"0","resultados.remuestreo.environmental <- "
"0","  tibble(pvalor = numeric(), diferencia = numeric())"
"0","library(perm)"
"0","for (i in 1:200) {"
"0","    set.seed(NULL) # No pongo semilla"
"0","    # Separo mi grupo de controles mujeres"
"0","    subconjunto.controles.mujeres <- integrated.database %>%"
"0","          filter(Group == ""TwinVolunter"" &"
"0","                 Female == ""1"")"
"0","    # Separo mi grupo de controles hombres"
"0","    subconjunto.controles.hombres <- integrated.database %>%"
"0","          filter(Group == ""TwinVolunter"" &"
"0","                 Male == ""1"")"
"0","    # Selecciona 90 controles mujeres al azars"
"0","    muestra.controles.mujeres <- slice_sample(subconjunto.controles.mujeres, n=90, replace = T)"
"0","    # Selecciono 10 controles hombre al azar"
"0","    muestra.controles.hombres <- slice_sample(subconjunto.controles.hombres, n=30, replace = T)"
"0","    # Junto ambas submuestras"
"0","    muestra.controles<-rbind(muestra.controles.mujeres, muestra.controles.hombres)"
"0","    # Obtengo el histograma de la Edad de la muestra de controles"
"0","    histograma.muestra.controles <- hist(muestra.controles$`Calculated Age`)"
"0","    # Veo cuántas clases asigno"
"0","    clases <- histograma.muestra.controles[[""breaks""]]"
"0","    # Veo cuantos elementos tengo en cada clase"
"0","    conteo.por.clase <- histograma.muestra.controles[[""counts""]]"
"0","  "
"0","## Ahora obtengo una muestra aleatoria de pacientes con las características de edad de la muestra de controles.  "
"0",""
"0","    # Vemos cuánto cortes tenemos"
"0","    cortes<-n_distinct(histograma.muestra.controles$breaks)"
"0","    cortes"
"0","    clases <- cortes -1 "
"0","    clases"
"0","    set.seed(NULL) # No pongo semilla"
"0","    # Separo mi grupo de pacientes"
"0","    subconjunto.pacientes <- integrated.database %>%"
"0","          filter(Group == ""SLEpatients"") "
"0","    "
"0","    # Declaro un dataframe en el que se guardarán mis resultados. "
"0","    muestra.pacientes <-tibble(""Lupus"" = factor(),"
"0","                               ""Female"" = factor(),"
"0","                               ""Male"" = factor(),"
"0","                               ""Calculated Age"" = numeric(),"
"0","                               ""Quality of life perception"" = numeric(),"
"0","                               ""Health perception"" = numeric(),"
"0","                               ""Environmental QoL-domain"" = numeric(),"
"0","                               ""Physical health QoL-domain"" = numeric(),"
"0","                               ""Psychologial QoL-domain"" = numeric(),"
"0","                               ""Social relations QoL-domain"" = numeric(),"
"0","                               ""Total quality of life"" = numeric(),"
"0","                               ""Group"" = numeric()"
"0","                               )"
"0","    # Obtengo n re-muestras aleatorias de pacientes dentro de los límites de cada clase del grupo control."
"0","    "
"0","    for (i in 1:clases) {"
"0","      submuestra.i <- subconjunto.pacientes %>%"
"0","      filter(`Calculated Age` >= histograma.muestra.controles$breaks[i] &"
"0","             `Calculated Age` <= histograma.muestra.controles$breaks[i+1])"
"0","      set.seed(NULL)"
"0","      if (histograma.muestra.controles$counts[i]>0) {"
"0","        muestra.pacientes.i  <- slice_sample(submuestra.i, n = histograma.muestra.controles$counts[i], replace = T)"
"0","        "
"0","      muestra.pacientes <- rbind(muestra.pacientes, muestra.pacientes.i)"
"0","      }"
"0","      "
"0","    }"
"0",""
"0","    # Ahora comparo la variable de interés de ambas muestras"
"0","    resultados.perm.test.calidad.vida<-permTS(muestra.controles$`Environmental QoL-domain`,"
"0","                                      muestra.pacientes$`Environmental QoL-domain`,"
"0","                                      alternative = ""greater"")"
"0","    # Guardamos los resultados de este remuestro en una dataframe (tibble)"
"0","    resultados.remuestreo.i <- tibble("
"0","      pvalor = resultados.perm.test.calidad.vida[[""p.value""]],"
"0","      diferencia = resultados.perm.test.calidad.vida[[""estimate""]])"
"0","    # Juntamos estos resultados en la dataframe (tibble) original, y planchamos la variable."
"0","    resultados.remuestreo.environmental<- rbind(resultados.remuestreo.environmental, resultados.remuestreo.i)"
"0","     "
"0","}"
